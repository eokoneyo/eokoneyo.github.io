@use 'sass:map';
@use 'sass:selector';
@use '../config/mq';
@use '../variables';
@use '../base/typography';

$expandable-search-size-compact: mq.px2em(
  35px
); // height and width - compact version
$search-animation-duration: 500ms;
$ease-out: cubic-bezier(0.215, 0.61, 0.355, 1);

.ns-header {
  position: fixed;
  width: 100%;
  top: 0;
  z-index: variables.$zindex-header;
  opacity: 1;
  visibility: visible;
  pointer-events: all;
  transition:
    opacity 200ms,
    background 50ms;
  background: rgba(variables.$light, 0);
  transform: translateZ(0);

  // styling specific for iPhones with notch
  @supports (padding-top: env(safe-area-inset-top)) {
    padding-top: env(safe-area-inset-top);
  }

  &--hidden {
    opacity: 0;
    visibility: hidden;
  }

  &--scrolled {
    background: rgba(variables.$light, 0.9);
  }

  .header {
    display: flex;
    height: mq.px2em(variables.$header-height);

    &__left,
    &__right {
      height: inherit;
    }

    &__right {
      display: flex;
      flex-grow: 1;
      justify-content: flex-end;
    }

    &__brand {
      &-wrapper {
        display: block;
        height: 100%;
        padding: 10px 0;
      }

      &-image,
      &-text {
        height: inherit;
        display: inline-flex;
        justify-content: center;
        align-items: center;
      }

      &-image {
        color: variables.$light;
        width: 60px;
      }

      &-text {
        color: variables.$primary;
      }
    }

    @include mq.mq($from: tablet) {
      &__right {
        position: relative;
      }
    }
  }

  .mobile-toggle {
    height: 100%;

    &__icon {
      width: 30px;
      height: 100%;
      position: relative;
      transform: rotate(0deg);
      transition: 0.5s ease-in-out;
      cursor: pointer;

      span {
        display: block;
        position: absolute;
        height: 2px;
        width: 100%;
        background: variables.$primary;
        opacity: 1;
        left: 0;
        transform: rotate(0deg);
        transition: 0.25s ease-in-out;

        @for $i from 1 through 3 {
          &:nth-child(#{$i}) {
            top: #{($i * 10) + 10}px;
          }
        }
      }

      @at-root .mobile-toggle--open {
        .mobile-toggle__icon {
          span {
            &:nth-child(1) {
              top: 30px;
              transform: rotate(135deg);
            }

            &:nth-child(2) {
              opacity: 0;
              left: 60px;
            }

            &:nth-child(3) {
              top: 30px;
              transform: rotate(-135deg);
            }
          }
        }
      }
    }

    @include mq.mq($until: tablet) {
      &:not(.mobile-toggle--open) ~ .menu-list {
        display: none;
      }
    }

    @include mq.mq($from: tablet) {
      display: none;
    }
  }

  .menu-list {
    display: inline-flex;
    position: absolute;
    left: 0;
    z-index: -1;
    width: 100%;
    height: calc(100vh);
    padding: 0;
    margin: 0;
    justify-content: space-evenly;
    background: variables.$light;

    &-item {
      list-style: none;
      padding: 15px;
      margin: auto 5px;
      font-size: 15px;
      font-family: typography.$secondary-font;
      font-weight: typography.$bold-font-weight;
      text-transform: capitalize;

      &:focus,
      &:hover,
      &.active {
        color: map.get(variables.$gray-pallet, dark);
      }
    }

    @include mq.mq($from: tablet) {
      margin: 0;
      height: 100%;
      width: auto;
      position: static;
      background: none;
      z-index: unset;
    }
  }

  .search {
    order: -1;
    padding: mq.px2em(12px) 0;
    margin: 0 mq.px2em(10px);
    flex: 0 0 $expandable-search-size-compact;
    transition: flex 0.1s;

    &-form {
      width: 100%;
      position: relative;
      display: inline-block;
      user-select: none;

      &__input {
        width: 100%;
        height: $expandable-search-size-compact;
        padding: 0;
        color: transparent;
        background-color: transparent;
        overflow: hidden;
        border-radius: 50em;
        border: 0;
        transition: width $search-animation-duration $ease-out;

        &::placeholder {
          opacity: 0;
        }

        &:hover {
          cursor: pointer;
        }

        &::-webkit-search-decoration,
        &::-webkit-search-cancel-button,
        &::-webkit-search-results-button,
        &::-webkit-search-results-decoration {
          display: none;
        }
      }

      &__btn {
        position: absolute;
        display: flex;
        top: 2px;
        right: 2px;
        padding: mq.px2em(5px);
        width: mq.px2em(30px);
        height: mq.px2em(30px);
        z-index: 1;
        pointer-events: none;
        border-radius: 50%;
        border: 0;
        transition: background-color $search-animation-duration;
        background-color: rgba(map.get(variables.$gray-pallet, mid), 0.2);

        .icon {
          display: block;
          margin: auto;
          height: mq.px2em(20px); // icon size
          width: mq.px2em(20px); // icon size
        }

        &:hover {
          background-color: rgba(map.get(variables.$gray-pallet, mid), 0.5);
        }

        &:focus {
          outline: none;
          background-color: rgba(map.get(variables.$gray-pallet, mid), 0.5);
        }
      }
    }

    &__results {
      width: 100%;
      min-height: mq.px2em(250px);
      position: absolute;
      top: 100%;
      left: 50%;
      transform: translateX(-50%);
      border-width: 1px 0;
      border-style: solid;
      border-color: rgba(map.get(variables.$gray-pallet, mid), 0.2);
      background: variables.$light;
      display: none;

      @at-root [search-expanded] .search__results {
        display: flex;
      }

      .loading-indicator {
        align-self: center;
        text-align: center;
        word-wrap: break-word;
        padding: mq.px2em(50px) 0;
      }

      .search-result-list {
        @extend .no-style-list;
        margin-bottom: mq.px2em(20px);
      }

      li {
        &:not(:last-of-type) {
          border-bottom: 1px solid
            rgba(map.get(variables.$gray-pallet, light), 0.8);

          &:hover,
          &:focus {
            border-bottom: 1px solid map.get(variables.$gray-pallet, light);
          }
        }

        &:focus {
          outline: none;
        }
      }

      &__item {
        display: block;
        padding: mq.px2em(10px);

        &__title,
        &__category {
          margin: 0;
        }

        &__title {
        }

        &__category {
          text-transform: capitalize;
        }
      }
    }

    @include mq.mq($from: tablet) {
      order: initial;

      &__results {
        width: 100vw;
        // subtract padding from header on both sides
        left: calc(50% - mq.px2em((10px * 2) + 1px));
      }
    }
  }

  // handles the backdrop for the search modal
  @at-root #page-top {
    header {
      & + [class^='ns-'][class$='layout'],
      & + [class='ns-landing-screen'] .main-content {
        &:before {
          content: '';
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: rgba(variables.$primary, 0.75);
          -webkit-backdrop-filter: blur(mq.px2em(10px));
          backdrop-filter: blur(mq.px2em(10px));
          visibility: hidden;
          opacity: 0;
          z-index: #{variables.$zindex-header - 1};
          transition:
            visibility 0.3s linear,
            opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }
      }

      &[search-expanded] {
        background: variables.$light;

        & + [class^='ns-'][class$='layout'],
        & + [class='ns-landing-screen'] .main-content {
          &:before {
            opacity: 1;
            visibility: visible;
          }
        }
      }
    }
  }

  /**
   * Styles specific to the search when it's expanded
   */
  &[search-expanded] {
    .menu-list {
      display: none;
    }

    .search {
      flex-grow: 1;
      justify-content: flex-end;

      &-form {
        &__input {
          padding: 0 mq.px2em(30px + 10px) 0 mq.px2em(10px);
          outline: none;
          border-radius: 0;
          cursor: auto;
          user-select: auto;
          color: map.get(variables.$gray-pallet, dark);
          transition: border-radius 0.5s ease-in $search-animation-duration;

          &--suggestions-active {
            border-radius: mq.px2em(5px) mq.px2em(5px) 0 0;
          }

          &::placeholder {
            opacity: 1;
            color: map.get(variables.$gray-pallet, mid);
          }

          & + .search-form__btn {
            pointer-events: auto;
          }
        }
      }
    }

    @include mq.mq($from: tablet) {
      .search {
        flex-grow: initial;

        &-form {
          width: calc(100% - mq.px2em(10px * 2));
          position: absolute;
          left: mq.px2em(10px);
        }
      }
    }
  }
}
